name: build
on: ["push", "pull_request"]

jobs:
  ci:
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.10.6]
        poetry-version: [1.5.1]
        os: [macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: pip install poetry==${{ matrix.poetry-version }}
      - name: Install package and dependencies
        run: python3 -m poetry install
      - name: Lint code
        run: |
          python3 -m poetry run black . --check
          python3 -m poetry run isort . --check
          python3 -m poetry run flake8 .
      - name: Run unit tests
        run: python3 -m poetry run pytest -v --cov=torchtime --cov-report=xml
      - name: Build documentation
        run: |
          python3 -m poetry run make doctest html --directory docs/
          python3 -m poetry run genbadge coverage -v -i coverage.xml -o docs/_build/html/assets/coverage-badge.svg
      - name: Upload code coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage.xml

  cd:
    strategy:
      fail-fast: false
    needs: ci
    # if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-22.04
    env:
      python_version: 3.10.6
      poetry_version: 1.5.1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python_version }}
      - name: Install Poetry
        run: pip install poetry==${{ env.poetry_version }}
      - name: Fix PyTorch version for Linux runner
        run: python3 -m 
      - name: Install package and dependencies
        run: python3 -m poetry install
      - name: Get code coverage
        uses: actions/download-artifact@v3
        with:
          name: coverage
      - name: Build documentation
        run: |
          python3 -m poetry run make doctest html --directory docs/
          python3 -m poetry run genbadge coverage -v -i coverage.xml -o docs/_build/html/assets/coverage-badge.svg
      - name: Update GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build/html
      # - name: Create release
      #   uses: docker://antonyurchenko/git-release:latest
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     CHANGELOG_FILE: "CHANGELOG.md"
      #     ALLOW_EMPTY_CHANGELOG: "false"
      - name: Revert to package PyTorch version
        run: python3 -m poetry add torch@">=1.12,<2.1"
      - name: Build package
        run: python3 -m poetry build
      # - name: Publish to PyPI
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     user: __token__
      #     password: ${{ secrets.PYPI_API_TOKEN }}
